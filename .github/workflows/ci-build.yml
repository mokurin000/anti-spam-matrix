# Origin config by @Kilerd

name: Build & Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  release:
    name: Release on ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        platform: [ macos-x86_64, macos-arm64, linux_glibc-x86_64, windows-x86_64 ]
        include:
          - platform: macos-x86_64
            target: x86_64-apple-darwin
            os: macos-latest
            bin: petpet
        
          - platform: macos-arm64
            target: aarch64-apple-darwin
            os: macos-latest
            bin: petpet

          - platform: linux_glibc-x86_64
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            bin: petpet
            
          - platform: windows-x86_64
            target: x86_64-pc-windows-msvc
            os: windows-latest
            bin: petpet.exe
            
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          toolchain: stable
      
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo
            ~/.rustup
            target
          key: ${{ matrix.target}}-cargo

      - name: Install Openssl
        if: matrix.os == 'ubuntu-latest'
        run: |
            sudo apt-get update
            sudo apt-get upgrade
            sudo apt-get install libssl-dev

      - name: Build executable
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Save cache
        if: ${{ github.ref_name == 'master' || github.ref_type == 'tag' }}
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo
            ~/.rustup
            target
          key: ${{ matrix.target }}-cargo

      - name: Prepare assets
        shell: bash
        run: |
          mv target/${{ matrix.target }}/release/${{ matrix.bin }} .          
          tar -cvzf ${{ matrix.target }}.tar.gz LICENSE ${{ matrix.bin }}
        
      - name: Declare some variables # https://stackoverflow.com/a/61699863
        id: vars
        shell: bash
        run: |
          pkg_ver=$(cargo metadata --format-version 1 --no-deps | sed -r 's/.*"version":"([^"]*)".*/\1/')
          echo "pkg_ver=${pkg_ver}" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.target }}.tar.gz
          tag_name: v${{ steps.vars.outputs.pkg_ver }}
          prerelease: false
          
